Grammar

    0 $accept: sprogram $end

    1 sprogram: PROGRAM ID NEWLINE function_stm STARTMAIN main ENDMAIN

    2 orismata: pollapla_orismata
    3         | %empty

    4 pollapla_orismata: t_dedomenwn metblhtes
    5                  | t_dedomenwn metblhtes KOMMA pollapla_orismata

    6 t_dedomenwn: CHAR
    7            | INTEGER

    8 tm_dhlwsewn: VARS dhlwseis
    9            | %empty

   10 dhlwseis: t_dedomenwn polles_metablites ERWT
   11         | t_dedomenwn polles_metablites ERWT dhlwseis

   12 polles_metablites: metblhtes
   13                  | metblhtes KOMMA polles_metablites

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm
   15             | %empty

   16 main: tm_dhlwsewn multiple_stm

   17 multiple_stm: stm multiple_stm
   18             | %empty

   19 stm: assignment
   20    | while_stm
   21    | for_stm
   22    | if_stm
   23    | switch_stm
   24    | print_stm
   25    | break_stm
   26    | n_function
   27    | COMMENT

   28 assignment: metblhtes ISON expr ERWT

   29 orismata_kaloumenis_sinartis_teliko: orismata_kaloumenis_sinartisis
   30                                    | %empty

   31 orismata_kaloumenis_sinartisis: expr
   32                               | expr KOMMA orismata_kaloumenis_sinartisis

   33 n_function: ID APAR orismata_kaloumenis_sinartis_teliko KPAR

   34 while_stm: WHILE APAR cndtn KPAR multiple_stm ENDWHILE

   35 for_stm: FOR ID ISONF INT TO INT STEP INT multiple_stm ENDFOR

   36 else_stm: ELSE multiple_stm
   37         | %empty

   38 elseif_stm: ELSEIF APAR cndtn KPAR THEN multiple_stm elseif_stm
   39           | %empty

   40 if_stm: IF APAR cndtn KPAR THEN multiple_stm elseif_stm else_stm ENDIF

   41 cndtn: cmprsn L_OP cndtn
   42      | cmprsn
   43      | APAR cndtn KPAR

   44 cmprsn: expr cmp_operator expr

   45 case_stm: CASE APAR expr KPAR AKTELIA multiple_stm case_stm
   46         | %empty

   47 default_stm: DEFAULT AKTELIA multiple_stm
   48            | %empty

   49 switch_stm: SWITCH APAR expr KPAR case_stm default_stm ENDSWITCH

   50 expr: sistatika_expr mth_operator expr
   51     | sistatika_expr
   52     | APAR expr KPAR

   53 sistatika_expr: metblhtes
   54               | INT
   55               | CHRCTER
   56               | n_function
   57               | NUM_OP INT

   58 print_stm: PRINT APAR STRING KOMMA polles_metablites KPAR ERWT
   59          | PRINT APAR STRING KPAR ERWT

   60 break_stm: BREAK ERWT

   61 metblhtes: ID
   62          | pinakas

   63 pinakas: ID AAGKYLI INT DAGKYLI

   64 mth_operator: NUM_OP
   65             | MUL_DIV_OP
   66             | POWER_OP

   67 cmp_operator: EQ_NOEQ_OP
   68             | COMP_OP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR (258) 6
    INTEGER (259) 7
    INT (260) 35 54 57 63
    PROGRAM (261) 1
    FUNCTION (262) 14
    VARS (263) 8
    END_FUNCTION (264) 14
    RETURN (265) 14
    STARTMAIN (266) 1
    ENDMAIN (267) 1
    ID (268) 1 14 33 35 61 63
    STRING (269) 58 59
    WHILE (270) 34
    ENDWHILE (271) 34
    FOR (272) 35
    TO (273) 35
    STEP (274) 35
    ENDFOR (275) 35
    IF (276) 40
    THEN (277) 38 40
    ELSEIF (278) 38
    ELSE (279) 36
    ENDIF (280) 40
    SWITCH (281) 49
    CASE (282) 45
    DEFAULT (283) 47
    ENDSWITCH (284) 49
    PRINT (285) 58 59
    BREAK (286) 60
    AAGKYLI (287) 63
    DAGKYLI (288) 63
    NEWLINE (289) 1 14
    CHRCTER (290) 55
    L_OP (291) 41
    NUM_OP (292) 57 64
    MUL_DIV_OP (293) 65
    POWER_OP (294) 66
    COMP_OP (295) 68
    EQ_NOEQ_OP (296) 67
    APAR (297) 14 33 34 38 40 43 45 49 52 58 59
    KPAR (298) 14 33 34 38 40 43 45 49 52 58 59
    AKTELIA (299) 45 47
    KOMMA (300) 5 13 32 58
    ISON (301) 28
    ERWT (302) 10 11 14 28 58 59 60
    ISONF (303) 35
    COMMENT (304) 27


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    sprogram (51)
        on left: 1
        on right: 0
    orismata (52)
        on left: 2 3
        on right: 14
    pollapla_orismata (53)
        on left: 4 5
        on right: 2 5
    t_dedomenwn (54)
        on left: 6 7
        on right: 4 5 10 11
    tm_dhlwsewn (55)
        on left: 8 9
        on right: 14 16
    dhlwseis (56)
        on left: 10 11
        on right: 8 11
    polles_metablites (57)
        on left: 12 13
        on right: 10 11 13 58
    function_stm (58)
        on left: 14 15
        on right: 1 14
    main (59)
        on left: 16
        on right: 1
    multiple_stm (60)
        on left: 17 18
        on right: 14 16 17 34 35 36 38 40 45 47
    stm (61)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 17
    assignment (62)
        on left: 28
        on right: 19
    orismata_kaloumenis_sinartis_teliko (63)
        on left: 29 30
        on right: 33
    orismata_kaloumenis_sinartisis (64)
        on left: 31 32
        on right: 29 32
    n_function (65)
        on left: 33
        on right: 26 56
    while_stm (66)
        on left: 34
        on right: 20
    for_stm (67)
        on left: 35
        on right: 21
    else_stm (68)
        on left: 36 37
        on right: 40
    elseif_stm (69)
        on left: 38 39
        on right: 38 40
    if_stm (70)
        on left: 40
        on right: 22
    cndtn (71)
        on left: 41 42 43
        on right: 34 38 40 41 43
    cmprsn (72)
        on left: 44
        on right: 41 42
    case_stm (73)
        on left: 45 46
        on right: 45 49
    default_stm (74)
        on left: 47 48
        on right: 49
    switch_stm (75)
        on left: 49
        on right: 23
    expr (76)
        on left: 50 51 52
        on right: 14 28 31 32 44 45 49 50 52
    sistatika_expr (77)
        on left: 53 54 55 56 57
        on right: 50 51
    print_stm (78)
        on left: 58 59
        on right: 24
    break_stm (79)
        on left: 60
        on right: 25
    metblhtes (80)
        on left: 61 62
        on right: 4 5 12 13 28 53
    pinakas (81)
        on left: 63
        on right: 62
    mth_operator (82)
        on left: 64 65 66
        on right: 50
    cmp_operator (83)
        on left: 67 68
        on right: 44


State 0

    0 $accept: . sprogram $end

    PROGRAM  shift, and go to state 1

    sprogram  go to state 2


State 1

    1 sprogram: PROGRAM . ID NEWLINE function_stm STARTMAIN main ENDMAIN

    ID  shift, and go to state 3


State 2

    0 $accept: sprogram . $end

    $end  shift, and go to state 4


State 3

    1 sprogram: PROGRAM ID . NEWLINE function_stm STARTMAIN main ENDMAIN

    NEWLINE  shift, and go to state 5


State 4

    0 $accept: sprogram $end .

    $default  accept


State 5

    1 sprogram: PROGRAM ID NEWLINE . function_stm STARTMAIN main ENDMAIN

    FUNCTION  shift, and go to state 6

    $default  reduce using rule 15 (function_stm)

    function_stm  go to state 7


State 6

   14 function_stm: FUNCTION . ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm

    ID  shift, and go to state 8


State 7

    1 sprogram: PROGRAM ID NEWLINE function_stm . STARTMAIN main ENDMAIN

    STARTMAIN  shift, and go to state 9


State 8

   14 function_stm: FUNCTION ID . APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm

    APAR  shift, and go to state 10


State 9

    1 sprogram: PROGRAM ID NEWLINE function_stm STARTMAIN . main ENDMAIN

    VARS  shift, and go to state 11

    $default  reduce using rule 9 (tm_dhlwsewn)

    tm_dhlwsewn  go to state 12
    main         go to state 13


State 10

   14 function_stm: FUNCTION ID APAR . orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm

    CHAR     shift, and go to state 14
    INTEGER  shift, and go to state 15

    $default  reduce using rule 3 (orismata)

    orismata           go to state 16
    pollapla_orismata  go to state 17
    t_dedomenwn        go to state 18


State 11

    8 tm_dhlwsewn: VARS . dhlwseis

    CHAR     shift, and go to state 14
    INTEGER  shift, and go to state 15

    t_dedomenwn  go to state 19
    dhlwseis     go to state 20


State 12

   16 main: tm_dhlwsewn . multiple_stm

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 29
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 13

    1 sprogram: PROGRAM ID NEWLINE function_stm STARTMAIN main . ENDMAIN

    ENDMAIN  shift, and go to state 41


State 14

    6 t_dedomenwn: CHAR .

    $default  reduce using rule 6 (t_dedomenwn)


State 15

    7 t_dedomenwn: INTEGER .

    $default  reduce using rule 7 (t_dedomenwn)


State 16

   14 function_stm: FUNCTION ID APAR orismata . KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm

    KPAR  shift, and go to state 42


State 17

    2 orismata: pollapla_orismata .

    $default  reduce using rule 2 (orismata)


State 18

    4 pollapla_orismata: t_dedomenwn . metblhtes
    5                  | t_dedomenwn . metblhtes KOMMA pollapla_orismata

    ID  shift, and go to state 43

    metblhtes  go to state 44
    pinakas    go to state 40


State 19

   10 dhlwseis: t_dedomenwn . polles_metablites ERWT
   11         | t_dedomenwn . polles_metablites ERWT dhlwseis

    ID  shift, and go to state 43

    polles_metablites  go to state 45
    metblhtes          go to state 46
    pinakas            go to state 40


State 20

    8 tm_dhlwsewn: VARS dhlwseis .

    $default  reduce using rule 8 (tm_dhlwsewn)


State 21

   33 n_function: ID . APAR orismata_kaloumenis_sinartis_teliko KPAR
   61 metblhtes: ID .
   63 pinakas: ID . AAGKYLI INT DAGKYLI

    AAGKYLI  shift, and go to state 47
    APAR     shift, and go to state 48

    $default  reduce using rule 61 (metblhtes)


State 22

   34 while_stm: WHILE . APAR cndtn KPAR multiple_stm ENDWHILE

    APAR  shift, and go to state 49


State 23

   35 for_stm: FOR . ID ISONF INT TO INT STEP INT multiple_stm ENDFOR

    ID  shift, and go to state 50


State 24

   40 if_stm: IF . APAR cndtn KPAR THEN multiple_stm elseif_stm else_stm ENDIF

    APAR  shift, and go to state 51


State 25

   49 switch_stm: SWITCH . APAR expr KPAR case_stm default_stm ENDSWITCH

    APAR  shift, and go to state 52


State 26

   58 print_stm: PRINT . APAR STRING KOMMA polles_metablites KPAR ERWT
   59          | PRINT . APAR STRING KPAR ERWT

    APAR  shift, and go to state 53


State 27

   60 break_stm: BREAK . ERWT

    ERWT  shift, and go to state 54


State 28

   27 stm: COMMENT .

    $default  reduce using rule 27 (stm)


State 29

   16 main: tm_dhlwsewn multiple_stm .

    $default  reduce using rule 16 (main)


State 30

   17 multiple_stm: stm . multiple_stm

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 55
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 31

   19 stm: assignment .

    $default  reduce using rule 19 (stm)


State 32

   26 stm: n_function .

    $default  reduce using rule 26 (stm)


State 33

   20 stm: while_stm .

    $default  reduce using rule 20 (stm)


State 34

   21 stm: for_stm .

    $default  reduce using rule 21 (stm)


State 35

   22 stm: if_stm .

    $default  reduce using rule 22 (stm)


State 36

   23 stm: switch_stm .

    $default  reduce using rule 23 (stm)


State 37

   24 stm: print_stm .

    $default  reduce using rule 24 (stm)


State 38

   25 stm: break_stm .

    $default  reduce using rule 25 (stm)


State 39

   28 assignment: metblhtes . ISON expr ERWT

    ISON  shift, and go to state 56


State 40

   62 metblhtes: pinakas .

    $default  reduce using rule 62 (metblhtes)


State 41

    1 sprogram: PROGRAM ID NEWLINE function_stm STARTMAIN main ENDMAIN .

    $default  reduce using rule 1 (sprogram)


State 42

   14 function_stm: FUNCTION ID APAR orismata KPAR . NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm

    NEWLINE  shift, and go to state 57


State 43

   61 metblhtes: ID .
   63 pinakas: ID . AAGKYLI INT DAGKYLI

    AAGKYLI  shift, and go to state 47

    $default  reduce using rule 61 (metblhtes)


State 44

    4 pollapla_orismata: t_dedomenwn metblhtes .
    5                  | t_dedomenwn metblhtes . KOMMA pollapla_orismata

    KOMMA  shift, and go to state 58

    $default  reduce using rule 4 (pollapla_orismata)


State 45

   10 dhlwseis: t_dedomenwn polles_metablites . ERWT
   11         | t_dedomenwn polles_metablites . ERWT dhlwseis

    ERWT  shift, and go to state 59


State 46

   12 polles_metablites: metblhtes .
   13                  | metblhtes . KOMMA polles_metablites

    KOMMA  shift, and go to state 60

    $default  reduce using rule 12 (polles_metablites)


State 47

   63 pinakas: ID AAGKYLI . INT DAGKYLI

    INT  shift, and go to state 61


State 48

   33 n_function: ID APAR . orismata_kaloumenis_sinartis_teliko KPAR

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    $default  reduce using rule 30 (orismata_kaloumenis_sinartis_teliko)

    orismata_kaloumenis_sinartis_teliko  go to state 66
    orismata_kaloumenis_sinartisis       go to state 67
    n_function                           go to state 68
    expr                                 go to state 69
    sistatika_expr                       go to state 70
    metblhtes                            go to state 71
    pinakas                              go to state 40


State 49

   34 while_stm: WHILE APAR . cndtn KPAR multiple_stm ENDWHILE

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 72

    n_function      go to state 68
    cndtn           go to state 73
    cmprsn          go to state 74
    expr            go to state 75
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 50

   35 for_stm: FOR ID . ISONF INT TO INT STEP INT multiple_stm ENDFOR

    ISONF  shift, and go to state 76


State 51

   40 if_stm: IF APAR . cndtn KPAR THEN multiple_stm elseif_stm else_stm ENDIF

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 72

    n_function      go to state 68
    cndtn           go to state 77
    cmprsn          go to state 74
    expr            go to state 75
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 52

   49 switch_stm: SWITCH APAR . expr KPAR case_stm default_stm ENDSWITCH

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    n_function      go to state 68
    expr            go to state 78
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 53

   58 print_stm: PRINT APAR . STRING KOMMA polles_metablites KPAR ERWT
   59          | PRINT APAR . STRING KPAR ERWT

    STRING  shift, and go to state 79


State 54

   60 break_stm: BREAK ERWT .

    $default  reduce using rule 60 (break_stm)


State 55

   17 multiple_stm: stm multiple_stm .

    $default  reduce using rule 17 (multiple_stm)


State 56

   28 assignment: metblhtes ISON . expr ERWT

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    n_function      go to state 68
    expr            go to state 80
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 57

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE . tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm

    VARS  shift, and go to state 11

    $default  reduce using rule 9 (tm_dhlwsewn)

    tm_dhlwsewn  go to state 81


State 58

    5 pollapla_orismata: t_dedomenwn metblhtes KOMMA . pollapla_orismata

    CHAR     shift, and go to state 14
    INTEGER  shift, and go to state 15

    pollapla_orismata  go to state 82
    t_dedomenwn        go to state 18


State 59

   10 dhlwseis: t_dedomenwn polles_metablites ERWT .
   11         | t_dedomenwn polles_metablites ERWT . dhlwseis

    CHAR     shift, and go to state 14
    INTEGER  shift, and go to state 15

    $default  reduce using rule 10 (dhlwseis)

    t_dedomenwn  go to state 19
    dhlwseis     go to state 83


State 60

   13 polles_metablites: metblhtes KOMMA . polles_metablites

    ID  shift, and go to state 43

    polles_metablites  go to state 84
    metblhtes          go to state 46
    pinakas            go to state 40


State 61

   63 pinakas: ID AAGKYLI INT . DAGKYLI

    DAGKYLI  shift, and go to state 85


State 62

   54 sistatika_expr: INT .

    $default  reduce using rule 54 (sistatika_expr)


State 63

   55 sistatika_expr: CHRCTER .

    $default  reduce using rule 55 (sistatika_expr)


State 64

   57 sistatika_expr: NUM_OP . INT

    INT  shift, and go to state 86


State 65

   52 expr: APAR . expr KPAR

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    n_function      go to state 68
    expr            go to state 87
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 66

   33 n_function: ID APAR orismata_kaloumenis_sinartis_teliko . KPAR

    KPAR  shift, and go to state 88


State 67

   29 orismata_kaloumenis_sinartis_teliko: orismata_kaloumenis_sinartisis .

    $default  reduce using rule 29 (orismata_kaloumenis_sinartis_teliko)


State 68

   56 sistatika_expr: n_function .

    $default  reduce using rule 56 (sistatika_expr)


State 69

   31 orismata_kaloumenis_sinartisis: expr .
   32                               | expr . KOMMA orismata_kaloumenis_sinartisis

    KOMMA  shift, and go to state 89

    $default  reduce using rule 31 (orismata_kaloumenis_sinartisis)


State 70

   50 expr: sistatika_expr . mth_operator expr
   51     | sistatika_expr .

    NUM_OP      shift, and go to state 90
    MUL_DIV_OP  shift, and go to state 91
    POWER_OP    shift, and go to state 92

    $default  reduce using rule 51 (expr)

    mth_operator  go to state 93


State 71

   53 sistatika_expr: metblhtes .

    $default  reduce using rule 53 (sistatika_expr)


State 72

   43 cndtn: APAR . cndtn KPAR
   52 expr: APAR . expr KPAR

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 72

    n_function      go to state 68
    cndtn           go to state 94
    cmprsn          go to state 74
    expr            go to state 95
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 73

   34 while_stm: WHILE APAR cndtn . KPAR multiple_stm ENDWHILE

    KPAR  shift, and go to state 96


State 74

   41 cndtn: cmprsn . L_OP cndtn
   42      | cmprsn .

    L_OP  shift, and go to state 97

    $default  reduce using rule 42 (cndtn)


State 75

   44 cmprsn: expr . cmp_operator expr

    COMP_OP     shift, and go to state 98
    EQ_NOEQ_OP  shift, and go to state 99

    cmp_operator  go to state 100


State 76

   35 for_stm: FOR ID ISONF . INT TO INT STEP INT multiple_stm ENDFOR

    INT  shift, and go to state 101


State 77

   40 if_stm: IF APAR cndtn . KPAR THEN multiple_stm elseif_stm else_stm ENDIF

    KPAR  shift, and go to state 102


State 78

   49 switch_stm: SWITCH APAR expr . KPAR case_stm default_stm ENDSWITCH

    KPAR  shift, and go to state 103


State 79

   58 print_stm: PRINT APAR STRING . KOMMA polles_metablites KPAR ERWT
   59          | PRINT APAR STRING . KPAR ERWT

    KPAR   shift, and go to state 104
    KOMMA  shift, and go to state 105


State 80

   28 assignment: metblhtes ISON expr . ERWT

    ERWT  shift, and go to state 106


State 81

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn . multiple_stm RETURN expr ERWT END_FUNCTION function_stm

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 107
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 82

    5 pollapla_orismata: t_dedomenwn metblhtes KOMMA pollapla_orismata .

    $default  reduce using rule 5 (pollapla_orismata)


State 83

   11 dhlwseis: t_dedomenwn polles_metablites ERWT dhlwseis .

    $default  reduce using rule 11 (dhlwseis)


State 84

   13 polles_metablites: metblhtes KOMMA polles_metablites .

    $default  reduce using rule 13 (polles_metablites)


State 85

   63 pinakas: ID AAGKYLI INT DAGKYLI .

    $default  reduce using rule 63 (pinakas)


State 86

   57 sistatika_expr: NUM_OP INT .

    $default  reduce using rule 57 (sistatika_expr)


State 87

   52 expr: APAR expr . KPAR

    KPAR  shift, and go to state 108


State 88

   33 n_function: ID APAR orismata_kaloumenis_sinartis_teliko KPAR .

    $default  reduce using rule 33 (n_function)


State 89

   32 orismata_kaloumenis_sinartisis: expr KOMMA . orismata_kaloumenis_sinartisis

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    orismata_kaloumenis_sinartisis  go to state 109
    n_function                      go to state 68
    expr                            go to state 69
    sistatika_expr                  go to state 70
    metblhtes                       go to state 71
    pinakas                         go to state 40


State 90

   64 mth_operator: NUM_OP .

    $default  reduce using rule 64 (mth_operator)


State 91

   65 mth_operator: MUL_DIV_OP .

    $default  reduce using rule 65 (mth_operator)


State 92

   66 mth_operator: POWER_OP .

    $default  reduce using rule 66 (mth_operator)


State 93

   50 expr: sistatika_expr mth_operator . expr

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    n_function      go to state 68
    expr            go to state 110
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 94

   43 cndtn: APAR cndtn . KPAR

    KPAR  shift, and go to state 111


State 95

   44 cmprsn: expr . cmp_operator expr
   52 expr: APAR expr . KPAR

    COMP_OP     shift, and go to state 98
    EQ_NOEQ_OP  shift, and go to state 99
    KPAR        shift, and go to state 108

    cmp_operator  go to state 100


State 96

   34 while_stm: WHILE APAR cndtn KPAR . multiple_stm ENDWHILE

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 112
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 97

   41 cndtn: cmprsn L_OP . cndtn

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 72

    n_function      go to state 68
    cndtn           go to state 113
    cmprsn          go to state 74
    expr            go to state 75
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 98

   68 cmp_operator: COMP_OP .

    $default  reduce using rule 68 (cmp_operator)


State 99

   67 cmp_operator: EQ_NOEQ_OP .

    $default  reduce using rule 67 (cmp_operator)


State 100

   44 cmprsn: expr cmp_operator . expr

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    n_function      go to state 68
    expr            go to state 114
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 101

   35 for_stm: FOR ID ISONF INT . TO INT STEP INT multiple_stm ENDFOR

    TO  shift, and go to state 115


State 102

   40 if_stm: IF APAR cndtn KPAR . THEN multiple_stm elseif_stm else_stm ENDIF

    THEN  shift, and go to state 116


State 103

   49 switch_stm: SWITCH APAR expr KPAR . case_stm default_stm ENDSWITCH

    CASE  shift, and go to state 117

    $default  reduce using rule 46 (case_stm)

    case_stm  go to state 118


State 104

   59 print_stm: PRINT APAR STRING KPAR . ERWT

    ERWT  shift, and go to state 119


State 105

   58 print_stm: PRINT APAR STRING KOMMA . polles_metablites KPAR ERWT

    ID  shift, and go to state 43

    polles_metablites  go to state 120
    metblhtes          go to state 46
    pinakas            go to state 40


State 106

   28 assignment: metblhtes ISON expr ERWT .

    $default  reduce using rule 28 (assignment)


State 107

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm . RETURN expr ERWT END_FUNCTION function_stm

    RETURN  shift, and go to state 121


State 108

   52 expr: APAR expr KPAR .

    $default  reduce using rule 52 (expr)


State 109

   32 orismata_kaloumenis_sinartisis: expr KOMMA orismata_kaloumenis_sinartisis .

    $default  reduce using rule 32 (orismata_kaloumenis_sinartisis)


State 110

   50 expr: sistatika_expr mth_operator expr .

    $default  reduce using rule 50 (expr)


State 111

   43 cndtn: APAR cndtn KPAR .

    $default  reduce using rule 43 (cndtn)


State 112

   34 while_stm: WHILE APAR cndtn KPAR multiple_stm . ENDWHILE

    ENDWHILE  shift, and go to state 122


State 113

   41 cndtn: cmprsn L_OP cndtn .

    $default  reduce using rule 41 (cndtn)


State 114

   44 cmprsn: expr cmp_operator expr .

    $default  reduce using rule 44 (cmprsn)


State 115

   35 for_stm: FOR ID ISONF INT TO . INT STEP INT multiple_stm ENDFOR

    INT  shift, and go to state 123


State 116

   40 if_stm: IF APAR cndtn KPAR THEN . multiple_stm elseif_stm else_stm ENDIF

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 124
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 117

   45 case_stm: CASE . APAR expr KPAR AKTELIA multiple_stm case_stm

    APAR  shift, and go to state 125


State 118

   49 switch_stm: SWITCH APAR expr KPAR case_stm . default_stm ENDSWITCH

    DEFAULT  shift, and go to state 126

    $default  reduce using rule 48 (default_stm)

    default_stm  go to state 127


State 119

   59 print_stm: PRINT APAR STRING KPAR ERWT .

    $default  reduce using rule 59 (print_stm)


State 120

   58 print_stm: PRINT APAR STRING KOMMA polles_metablites . KPAR ERWT

    KPAR  shift, and go to state 128


State 121

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN . expr ERWT END_FUNCTION function_stm

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    n_function      go to state 68
    expr            go to state 129
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 122

   34 while_stm: WHILE APAR cndtn KPAR multiple_stm ENDWHILE .

    $default  reduce using rule 34 (while_stm)


State 123

   35 for_stm: FOR ID ISONF INT TO INT . STEP INT multiple_stm ENDFOR

    STEP  shift, and go to state 130


State 124

   40 if_stm: IF APAR cndtn KPAR THEN multiple_stm . elseif_stm else_stm ENDIF

    ELSEIF  shift, and go to state 131

    $default  reduce using rule 39 (elseif_stm)

    elseif_stm  go to state 132


State 125

   45 case_stm: CASE APAR . expr KPAR AKTELIA multiple_stm case_stm

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 65

    n_function      go to state 68
    expr            go to state 133
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 126

   47 default_stm: DEFAULT . AKTELIA multiple_stm

    AKTELIA  shift, and go to state 134


State 127

   49 switch_stm: SWITCH APAR expr KPAR case_stm default_stm . ENDSWITCH

    ENDSWITCH  shift, and go to state 135


State 128

   58 print_stm: PRINT APAR STRING KOMMA polles_metablites KPAR . ERWT

    ERWT  shift, and go to state 136


State 129

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr . ERWT END_FUNCTION function_stm

    ERWT  shift, and go to state 137


State 130

   35 for_stm: FOR ID ISONF INT TO INT STEP . INT multiple_stm ENDFOR

    INT  shift, and go to state 138


State 131

   38 elseif_stm: ELSEIF . APAR cndtn KPAR THEN multiple_stm elseif_stm

    APAR  shift, and go to state 139


State 132

   40 if_stm: IF APAR cndtn KPAR THEN multiple_stm elseif_stm . else_stm ENDIF

    ELSE  shift, and go to state 140

    $default  reduce using rule 37 (else_stm)

    else_stm  go to state 141


State 133

   45 case_stm: CASE APAR expr . KPAR AKTELIA multiple_stm case_stm

    KPAR  shift, and go to state 142


State 134

   47 default_stm: DEFAULT AKTELIA . multiple_stm

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 143
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 135

   49 switch_stm: SWITCH APAR expr KPAR case_stm default_stm ENDSWITCH .

    $default  reduce using rule 49 (switch_stm)


State 136

   58 print_stm: PRINT APAR STRING KOMMA polles_metablites KPAR ERWT .

    $default  reduce using rule 58 (print_stm)


State 137

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT . END_FUNCTION function_stm

    END_FUNCTION  shift, and go to state 144


State 138

   35 for_stm: FOR ID ISONF INT TO INT STEP INT . multiple_stm ENDFOR

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 145
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 139

   38 elseif_stm: ELSEIF APAR . cndtn KPAR THEN multiple_stm elseif_stm

    INT      shift, and go to state 62
    ID       shift, and go to state 21
    CHRCTER  shift, and go to state 63
    NUM_OP   shift, and go to state 64
    APAR     shift, and go to state 72

    n_function      go to state 68
    cndtn           go to state 146
    cmprsn          go to state 74
    expr            go to state 75
    sistatika_expr  go to state 70
    metblhtes       go to state 71
    pinakas         go to state 40


State 140

   36 else_stm: ELSE . multiple_stm

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 147
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 141

   40 if_stm: IF APAR cndtn KPAR THEN multiple_stm elseif_stm else_stm . ENDIF

    ENDIF  shift, and go to state 148


State 142

   45 case_stm: CASE APAR expr KPAR . AKTELIA multiple_stm case_stm

    AKTELIA  shift, and go to state 149


State 143

   47 default_stm: DEFAULT AKTELIA multiple_stm .

    $default  reduce using rule 47 (default_stm)


State 144

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION . function_stm

    FUNCTION  shift, and go to state 6

    $default  reduce using rule 15 (function_stm)

    function_stm  go to state 150


State 145

   35 for_stm: FOR ID ISONF INT TO INT STEP INT multiple_stm . ENDFOR

    ENDFOR  shift, and go to state 151


State 146

   38 elseif_stm: ELSEIF APAR cndtn . KPAR THEN multiple_stm elseif_stm

    KPAR  shift, and go to state 152


State 147

   36 else_stm: ELSE multiple_stm .

    $default  reduce using rule 36 (else_stm)


State 148

   40 if_stm: IF APAR cndtn KPAR THEN multiple_stm elseif_stm else_stm ENDIF .

    $default  reduce using rule 40 (if_stm)


State 149

   45 case_stm: CASE APAR expr KPAR AKTELIA . multiple_stm case_stm

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 153
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 150

   14 function_stm: FUNCTION ID APAR orismata KPAR NEWLINE tm_dhlwsewn multiple_stm RETURN expr ERWT END_FUNCTION function_stm .

    $default  reduce using rule 14 (function_stm)


State 151

   35 for_stm: FOR ID ISONF INT TO INT STEP INT multiple_stm ENDFOR .

    $default  reduce using rule 35 (for_stm)


State 152

   38 elseif_stm: ELSEIF APAR cndtn KPAR . THEN multiple_stm elseif_stm

    THEN  shift, and go to state 154


State 153

   45 case_stm: CASE APAR expr KPAR AKTELIA multiple_stm . case_stm

    CASE  shift, and go to state 117

    $default  reduce using rule 46 (case_stm)

    case_stm  go to state 155


State 154

   38 elseif_stm: ELSEIF APAR cndtn KPAR THEN . multiple_stm elseif_stm

    ID       shift, and go to state 21
    WHILE    shift, and go to state 22
    FOR      shift, and go to state 23
    IF       shift, and go to state 24
    SWITCH   shift, and go to state 25
    PRINT    shift, and go to state 26
    BREAK    shift, and go to state 27
    COMMENT  shift, and go to state 28

    $default  reduce using rule 18 (multiple_stm)

    multiple_stm  go to state 156
    stm           go to state 30
    assignment    go to state 31
    n_function    go to state 32
    while_stm     go to state 33
    for_stm       go to state 34
    if_stm        go to state 35
    switch_stm    go to state 36
    print_stm     go to state 37
    break_stm     go to state 38
    metblhtes     go to state 39
    pinakas       go to state 40


State 155

   45 case_stm: CASE APAR expr KPAR AKTELIA multiple_stm case_stm .

    $default  reduce using rule 45 (case_stm)


State 156

   38 elseif_stm: ELSEIF APAR cndtn KPAR THEN multiple_stm . elseif_stm

    ELSEIF  shift, and go to state 131

    $default  reduce using rule 39 (elseif_stm)

    elseif_stm  go to state 157


State 157

   38 elseif_stm: ELSEIF APAR cndtn KPAR THEN multiple_stm elseif_stm .

    $default  reduce using rule 38 (elseif_stm)
